---
- name: check nginx exsits
  shell: bash -lc "nginx -v"
  register: nginx_exists
  changed_when: no
  ignore_errors: yes

- name: nginx install
  become: yes
  shell: bash -lc "amazon-linux-extras install -y nginx1"
  when: nginx_exists is failed

- name: create default.conf
  become: yes
  template:
    src: default.conf.j2
    dest: /etc/nginx/conf.d/default.conf
  when: nginx_exists is failed

- name: nginx permission
  become: yes
  file: 
    path: /var/lib
    state: directory
    mode: '0775'
    recurse: yes
  when: nginx_exists is failed

- name: edit puma.service
  become: yes
  template:
    src: puma.service.j2
    dest: /etc/systemd/system/puma.service
  when: nginx_exists is failed

- name: puma permission
  become: yes
  file: 
    path: /etc/systemd
    state: directory
    mode: '0775'
    recurse: yes
  when: nginx_exists is failed

- name: reload puma.service
  become: yes
  shell: |
    systemctl daemon-reload
  when: nginx_exists is failed

- name: reload puma.service
  become: yes
  shell: |
    systemctl enable puma.service
  when: nginx_exists is failed

- name: Check if tmp/sockets directory exists
  ansible.builtin.stat:
    path: "{{ app_dir }}/tmp/sockets"
  register: tmp_sockets_exists

- name: Create tmp/sockets
  become: yes
  ansible.builtin.file:
    path: "{{ app_dir }}/tmp/sockets"
    state: directory
    mode: "0755"
    owner: ec2-user
  when: tmp_sockets_exists is failed

- name: Check if tmp/pids/ directory exists
  ansible.builtin.stat:
    path: "{{ app_dir }}/tmp/pids"
  register: tmp_pids_exists

- name: Create tmp/pids
  become: yes
  ansible.builtin.file:
    path: "{{ app_dir }}/tmp/pids"
    state: directory
    mode: "0755"
    owner: ec2-user
  when:  tmp_pids_exists is failed


# -----------------------------------------------------
# system start
# -----------------------------------------------------

- name: start server nginx
  become: yes
  shell: |
    systemctl start nginx
  args:
    chdir: "{{ app_dir }}"

- name: start server puma
  become: yes
  shell: |
    systemctl start puma
  args:
    chdir: "{{ app_dir }}"
